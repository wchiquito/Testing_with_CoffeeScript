// Generated by CoffeeScript 1.7.1
(function() {
  var Basket;

  Basket = (function() {
    function Basket() {
      this.items = [];
      this.distinctCount = 0;
      this.totalCount = 0;
    }

    Basket.prototype.add = function(item, quantity) {
      var curItemLoc;
      if (this.itemExistsInBasket(item.id)) {
        curItemLoc = this.getItemLocation(item.id);
        this.items[curItemLoc].quantity += quantity;
      } else {
        this.items.push({
          "item_id": item.id,
          "quantity": quantity,
          "item": item
        });
        this.distinctCount++;
      }
      return this.totalCount += quantity;
    };

    Basket.prototype.getQuantity = function(item_id) {
      var item, _i, _len, _ref;
      _ref = this.items;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if (item.item_id === item_id) {
          return item.quantity;
        }
      }
      return false;
    };

    Basket.prototype.itemExistsInBasket = function(item_id) {
      var item, _i, _len, _ref;
      _ref = this.items;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if (item.item_id === item_id) {
          return true;
        }
      }
      return false;
    };

    Basket.prototype.getItemLocation = function(item_id) {
      var count, item, _i, _len, _ref;
      count = 0;
      _ref = this.items;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        if (item.item_id === item_id) {
          return count;
        }
        count++;
      }
      return false;
    };

    Basket.prototype.calculateTotal = function() {
      var i, total, _i, _len, _ref;
      total = 0;
      _ref = this.items;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        i = _ref[_i];
        total += i.item.cost * i.quantity;
      }
      return total;
    };

    return Basket;

  })();

  window.Basket = Basket;

}).call(this);
