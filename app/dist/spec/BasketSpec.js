// Generated by CoffeeScript 1.7.1
(function() {
  describe("Basket Class", function() {
    var test;
    test = {};
    beforeEach(function() {
      test.basket = new Basket();
      test.item = new Item(1, "Macbook Air", "Newer, thinner, better", 799);
      test.item2 = new Item(2, "Magic Trackpad", "Better than a mouse", 50);
      return test.basket.add(test.item2, 1);
    });
    it("should be able to add a new item to basket", function() {
      var priorCountVal;
      priorCountVal = test.basket.distinctCount;
      test.basket.add(test.item, 1);
      return expect(test.basket.distinctCount).toEqual(priorCountVal + 1);
    });
    it("should be able to update quantity when adding an item already in the basket", function() {
      var priorCountVal;
      priorCountVal = test.basket.getQuantity(2);
      test.basket.add(test.item2, 1);
      return expect(test.basket.getQuantity(2)).toEqual(priorCountVal + 1);
    });
    return describe("helper functions in the Basket class", function() {
      return describe("getQuantity", function() {
        it("should return false if passed an id that is not in array", function() {
          return expect(test.basket.getQuantity(12345)).toBeFalsy();
        });
        it("should return false if passed an invalid argument, such as a string", function() {
          return expect(test.basket.getQuantity("hello!")).toBeFalsy();
        });
        return it("should return the quantity if given a valid id", function() {
          return expect(test.basket.getQuantity(2)).toEqual(1);
        });
      });
    });
  });

}).call(this);
